<div class="page-top uk-child-width-1-2" uk-grid>
    <div>
        <h1 class="page-title">{{ mocha.i18n.get('page_title') }}</h1>
    </div>
    <div class="uk-text-right">
        <button class="uk-button uk-button-primary">Insert</button>
    </div>
</div>

<div class="page-content uk-card-panel uk-card-body uk-margin-top">

    <table id="user-record" class="uk-table uk-table-striped uk-table-hover">
        <thead>
            <tr>
                <td style="width:30px;padding:5px 3px;">
                    <div class="uk-inline">
                        <a class="uk-button uk-button-default uk-button-mini"><i data-feather="menu" width="16px" height="16px"></i></a>
                        <div class="uk-dropdown-mini" uk-dropdown="mode:click;offset:5;pos:bottom-left;" uk-toggle>
                            <ul class="uk-nav uk-dropdown-nav">
                                <li><a data-mc-bulkAction='{"type":"enabled"}'><i class="fa fa-check fa-fw"></i> {{ mocha.i18n.get('enabled') }}</a></li>
                                <li><a data-mc-bulkAction='{"type":"disabled"}'><i class="fa fa-times fa-fw"></i> {{ mocha.i18n.get('disabled') }}</a></li>
                                <li><a data-mc-bulkAction='{"type":"trash"}'><i class="fa fa-trash-o fa-fw"></i> {{ mocha.i18n.get('trash') }}</a></li>
                                <li><a data-mc-bulkAction='{"type":"delete"}'><i class="fa fa-trash fa-fw"></i> {{ mocha.i18n.get('delete') }}</a></li>
                            </ul>
                        </div>
                    </div>
                </td>
                <th style="width:50px;">ID</th>
                <th style="min-width:200px">Name</th>
                <th style="width:200px;">Email</th>
                <th style="width:150px;">Roles</th>
                <th style="width:200px;">Registration</th>
                <th style="width:200px;">Last Login</th>
                <th style="width:110px;">Status</th>
                <th style="width:90px;">Action</th>
            </tr>
            <tr>
                <td class="uk-text-center">
                    <input type="checkbox" class="uk-checkbox" data-mc-checkboxWatch>
                </td>
                <td style="width:50px;"></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td class="uk-text-center">
                    <a class="uk-label uk-background-gray filter_clear" data-dtClearFilter>{{ mocha.i18n.get('reset_filter') }}</a>
                </td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td colspan="9" class="dataTables_empty"><i>{{ mocha.i18n.get('loading') }}</i></td>
            </tr>
        </tbody>
    </table>

</div>

<script>
$(document).ready(function() {
var tableId     = '#user-record',
    sortingCol  = [[6, 'desc'], [2, 'asc']], // default last_login, name
    filterParam = [
        null,
        { type : 'number' },
        { type : 'text' },
        { type : 'text' },
        { type : 'select', values: [
            { value : '', label: 'All' },
            {% for role in roles %}
                { value: '{{ role.title }}', label: '{{ role.title }}' },
            {% endfor %}
        ], selected : '' },
        { type : 'date-range' },
        { type : 'date-range' },
        { type : 'select', values: [
            { value : '!=trash',   label : '{{ mocha.i18n.get("all") }}' },
            { value : 'enabled',   label : '{{ mocha.i18n.get("enabled") }}' },
            { value : 'disabled',  label : '{{ mocha.i18n.get("disabled") }}' },
            { value : 'trash',     label : '{{ mocha.i18n.get("trash") }}' }
        ], selected : '!=trash' },
        null
    ];

var dtTable = $(tableId).DataTable({
        ajax : $.fn.dataTable.pipeline({
            url : mocha.setting.url_base + 'account/user/records',
            data : function(d) {
                d.params     = { 'search' : filterParam };
                d.csrf_token = '{{ mocha.tool_secure.csrfToken() }}';
            }
        }),
        sorting : sortingCol,
        columnDefs : [
            { orderable : false, targets : [0, -1] },
            { visible   : false, targets : [ 5 ] }, // Hide column
            { className : 'noVis dt-no-print', targets : [0, -1] },
            { createdCell : function(nTd) {
                $(nTd).addClass('uk-text-center'); },
                targets : [ 0, 1, -2, -1 ]
            },
        ],
        searchCols : [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { 'search': '!=trash' },
            null
        ],
        columns : [
            { data : 'user_id',
                render : function(data, type, full) {
                    return  '<input type="checkbox" class="uk-checkbox checkboxWatch" name="bulk_action[]" value="' + data + '" />';
                }
            },
            { data : 'user_id' },
            { data : 'fullname',
                render : function(data, type, full) {
                    return '<a href="' + full.url_edit + '">' + (data ? data : '-') + '</a> ' + (full.displayname ? '<i class="uk-text-muted">(' + full.displayname + ')</i>' : '');
                }
            },
            { data : 'email' },
            { data : 'role_title' },
            { data : 'created' },
            { data : 'last_login',
                render : function(data, type, full) {
                    return data ? data : '-';
                }
            },
            { data : 'status',
                render : function(data, type, full) {
                    output  = data;
                    if (full.raw.status === 'disabled') {
                        output  = '<div class="uk-label uk-label-warning">' + data + '</div>';
                    }
                    if (full.raw.status === 'trash') {
                        output  = '<div class=""uk-label uk-label-danger">' + data + '</div>';
                    }

                    return output;
                }
            },
            { data : 'user_id',
                render : function(data, type, full) {
                    output  = '<a href="' + full.url_edit + '" uk-tooltip title="{{ mocha.i18n.get("edit") }}"><i data-feather="edit-3" width="18px" height="18px"></i></span></a>';
                    output += '<div class="uk-inline uk-margin-mini-left">';
                    output += '    <a class="uk-button uk-button-default uk-button-mini" style="margin-top:-5px"><i data-feather="menu" width="16px" height="16px"></i></a>';
                    output += '    <div class="uk-dropdown-mini" uk-dropdown="mode:click;offset:5;pos:bottom-right;" uk-toggle>';
                    output += '        <ul class="uk-nav uk-dropdown-nav">';
                    if (full.raw.status === 'trash') {
                        output += '       <li><a data-mc-bulkAction=\'{"type":"disabled", "item":"' + full.user_id + '", "message":"{{ mocha.i18n.get("success_restore") }}"}\'>{{ mocha.i18n.get("restore") }}</a></li>';
                        output += '       <li><a data-mc-bulkAction=\'{"type":"delete", "item":"' + full.user_id + '"}\'> {{ mocha.i18n.get("delete") }}</a></li>';
                    } else {
                        if (full.raw.status !== 'enabled') {
                            output += '   <li><a data-mc-bulkAction=\'{"type":"enabled", "item":"' + full.user_id + '"}\'>{{ mocha.i18n.get("enabled") }}</a></li>';
                        }
                        if (full.raw.status !== 'disabled') {
                            output += '   <li><a data-mc-bulkAction=\'{"type":"disabled", "item":"' + full.user_id + '"}\'>{{ mocha.i18n.get("disabled") }}</a></li>';
                        }
                        output += '       <li><a data-mc-bulkAction=\'{"type":"trash", "item":"' + full.user_id + '"}\'>{{ mocha.i18n.get("trash") }}</a></li>';
                    }
                    output += '        </ul>';
                    output += '    </div>';
                    output += '</div>';

                    return output;
                }
            },
        ],
        drawCallback : function(settings) {
            feather.replace();
        }
    }),
    dtObject = $(tableId).dataTable().columnFilter(dtFilterOptions(filterParam));

    // console.log(dtTable);

    // Use typewatch for "search all" input
    $('.dataTables_filter input').off('keypress keyup search input paste cut').typeWatch({
        captureLength: 0,
        callback: function(value) {
            dtTable.search(value).draw();
        },
    });

    // Refresh record results
    $('.page-content').on('click', '[data-mc-dtRefreshRecord]', function() {
        dtTable.clearPipeline().draw();
    });

    // Clear all filter + order
    $('[data-dtClearFilter]').on('click', function() {
        dtTable.order(sortingCol).clearSearch().draw();
    });

    // Checkbox bulk action
    $('.page-content').on('click', '[data-mc-bulkAction]', function(e) {
        e.preventDefault();

        var data = $(this).data('mcBulkaction');
        data.csrf_token = '{{ mocha.tool_secure.csrfToken() }}';

        $.fn.mocha.bulkAction({
            url      : mocha.setting.url_base + 'account/user/bulkAction',
            data     : data,
            validate : function(bulkActionProceed) {
                if (data.type === 'delete') {
                    $.fn.mocha.confirm({
                        title       : '{{ mocha.i18n.get("are_you_sure") }}',
                        message     : '{{ mocha.i18n.get("confirm_delete") }}',
                        onConfirm   : function() { bulkActionProceed(); }
                    });
                } else {
                    bulkActionProceed();
                }
            },
            onSuccess : function() {
                dtTable.clearPipeline().draw();
            }
        });
    });
});
</script>
